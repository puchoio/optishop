apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: scraper-deployment
spec:
  selector:
    matchLabels:
      app: scraper
  replicas: 2 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: scraper
    spec:
      containers:
      - name: scraper
        image: puchoborja/scraper:0.0.3
        #args:
        # - sleep
        # - "9999"
        volumeMounts:
        - name: scraper-volume
          mountPath: /work/config
        env:
        - name: QUARKUS_HTTP_PORT
          value: "8090"
        - name: QUARKUS_DATASOURCE_URL
          value: "vertx-reactive:postgresql://10.104.4.57:5432/scraperdb"
        - name: QUARKUS_DATASOURCE_USERNAME
          value: "scraper"
        - name: QUARKUS_DATASOURCE_PASSWORD
          value: "password"
        ports:
        - containerPort: 8090
        resources:
          requests:
            memory: "64Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "100m"
      volumes:
      - name: scraper-volume
        configMap:
          name: scraper-config
      serviceAccountName: scraper-serviceaccount
---
apiVersion: v1
kind: Service
metadata:
  name: scraper-service
spec:
  type: LoadBalancer
  selector:
    app: scraper
  ports:
    - port: 8090
      name: http-service-port
      targetPort: 8090
      nodePort: 30068
  clusterIP: 10.98.251.5
  externalTrafficPolicy: Cluster
---
apiVersion: v1
kind: ServiceAccount
metadata:
<<<<<<< HEAD
  annotations:
    kubernetes.io/ingress.class: istio
  name: ingress
spec:
  rules:
  - host: optishop.com
    http:
      paths:
      - path: /*
        backend:
          serviceName: scraper-service
          servicePort: 8090


=======
  name: scraper-serviceaccount
---
#apiVersion: networking.k8s.io/v1beta1
#kind: IngressClass
#metadata:
#  name: external-lb
#spec:
#  controller: example.com/ingress-controller
#  parameters:
#    apiGroup: k8s.example.com
#    kind: IngressParameters
#    name: external-lb
#---
#apiVersion: networking.k8s.io/v1beta1
#kind: Ingress
#metadata:
#  name: scrapper-ingress
#  annotations:
#    ingress.kubernetes.io/rewrite-target: /
#spec:
#  ingressClassName: "external-lb"
#  rules:
#    - host: optishop.com
#      http: 
#        paths:
#          - path: /hello
#            backend:
#              serviceName: scraper-service
#              servicePort: 8090
#
---
#apiVersion: networking.istio.io/v1alpha3
#kind: Gateway
#metadata:
#  name: my-gateway
#  namespace: optishop
#spec:
#  selector:
#    istio: ingressgateway
#  servers:
#  - port:
#      number: 8090
#      name: http
#      protocol: HTTP
#    hosts:
#      - "optishop.com"     
#---
#apiVersion: networking.istio.io/v1alpha3
#kind: VirtualService
#metadata:
#  name: my-virtualservice
#  namespace: optishop
#spec:
#  hosts:
#  - "optishop.com"
#  gateways:
#  - my-gateway
#  http:
#  - match:
#    - uri:
#        prefix: /
#    route:
#    - destination:
#        port:
#          number: 8090
#        host: scraper-service
#apiVersion: networking.istio.io/v1alpha3
#kind: Gateway
#metadata:
#  name: optishop-gateway
#spec:
#  selector:
#    istio: ingressgateway # use istio default controller
#  servers:
#  - port:
#      number: 80
#      name: http
#      protocol: HTTP
#    hosts:
#    - "*"
#---
#apiVersion: networking.istio.io/v1alpha3
#kind: VirtualService
#metadata:
#  name: bookinfo
#spec:
#  hosts:
#  - "*"
#  gateways:
#  - optishop-gateway
#  http:
#  - match:
#    - uri:
#        exact: /hello
#    route:
#    - destination:
#        host: scraper
#        port:
#          number: 8090
#
>>>>>>> e73efe8b9d00f1b4eb3d6eeb081c8556c1fcb3ea
